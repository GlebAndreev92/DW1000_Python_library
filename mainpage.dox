/*!
  \mainpage

  This document provides an overview of the DWM1000 application.

  \section sec_intro Introduction

  The application provides a ranging and positioning system for tags.
  This is accomplished by running several anchors at known positions and one tag which ranges
  to these anchors and computes its own position if more than 3 tags could be reached.

  \subsection ssec_sequence Sequence

  The following sequence gives a crude overview over the ranging process. In the actual application,error correction is performed with retries and resends of messages.

  -# Tag selects anchor
  -# Tag ranges
    -# Tag sends poll message to anchor, stores send timestamp (ps)
    -# Anchor sends ack message, stores send timestamp (rs) and receive timestamp (pr)
    -# Tag receives ack message, stores receive timestamp (rr)
    -# Anchor sends message containing its timestamps
    -# Tag get message and has all timestamps
    -# Tag computes:
      - round trip time (rtt): rr - ps
      - reply time (rt): rs - pr
    -# Tag computes range:
      0.5 * (rtt - rt) * c
  -# Select next anchor
  -# If anchor == first anchor: Calculate position

  \section sec_setup Setup

  \subsection sec_config Configuration

  Edit the configuration file config.py according to your needs.

  - mode: One of "anchor" or "tag"
  - pin_irq: Interrupt pin number
  - pin_cs: Chip select pin number
  - pin_rst: Reset pin number
  - eid: Extended ID
      - Only the last two bytes are used for addressing -> short id mode
      - Must differ for all nodes
  - pan: Must be equal for all nodes

  Tag specific values:

  - anchor_list: List of anchors
  - anchor_positions: List of anchor positions
  - logfile: Path to a logfile, will be appended
  - rxrfto_limit: Number of receiver timeouts before resending poll
  - tries_limit: Number of times a poll message will be send to one anchor before a new anchor will be selected
  - webui_enable: Enable/Disable web server listening on port 8080

  \subsection sec_run Run

  python3 main.py

  \section sec_log Log

  \subsection sec_log_structure Structure

  Two log message types:

  - <B>Range</B> \<unix timestamp\> R \<id\> \<range\> \<ps\> \<pr\> \<rs\> \<rr\>
  - <B>Position</B> \<unix timestamp\> P \<x\> \<y\> \<z\>

  ps = poll send timestamp<BR>
  pr = poll receive timestamp<BR>
  rs = response send timestamp<BR>
  rr = response receive timestamp<BR>

  \subsection sec_log_examples Examples

  1564303918.590647 R 0b3b 3.6056 1004178879494 939747580804 939934022662 1004365322889<BR>
  1564303919.123503 R 0c3b 0.1313 1037894149638 497322945574 497509387782 1038080591902<BR>
  1564303920.609525 P 2.2314211096334784 2.780742275964626 -3.141723414227458e-05<BR>
  1564303923.626552 R 0c3b 0.0750 226243628038 785186030349 785372472326 226430070047<BR>
  1564303925.201653 R 0a3b 5.0413 327182020614 98649576951 98802726406 327335172218<BR>
  1564303925.734531 R 0b3b 3.6548 360909317126 296478972665 296665414662 361095760681<BR>
  1564303927.514096 P 4.848092267472515 -2.0590230456712112e-05 -1.9865279901800228e-05<BR>
  1564303929.264948 R 0b3b 3.6220 586633607686 522203742220 522390183942 586820050952<BR>
*/
